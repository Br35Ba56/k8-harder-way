- name: Create required kubernetes directory
  file:
    state: directory
    path: "{{ item }}"
    mode: 755
  when: inventory_hostname in groups['controller']
  with_items:
    - /etc/kubernetes/config
    - /var/lib/kubernetes/

- name: Copy required certs/keys/token to /var/lib/kubernetes
  copy:
    src: "{{ item }}"
    dest: /var/lib/kubernetes/
    mode: 0400
  when:  inventory_hostname in groups['controller']
  with_items:
    - ./crypto/kubernetes-key.pem
    - ./crypto/kubernetes.pem
    - "{{ ca_path }}"
    - ./crypto/service-account-key.pem
    - ./crypto/service-account.pem
    - ./crypto/admin-key.pem
    - ./crypto/admin.pem
    - ./files/token.csv
    - ./files/authorization-policy.jsonl
    - ./crypto/encryption-config.yaml

# - name:  Setup Kubernetes binaries
#   get_url:
#     url: "{{ item }}"
#     dest: /usr/bin/
#     mode: 0755
#   when: inventory_hostname in groups['controller']
#   with_items:
#     - "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-apiserver"
#     - "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-controller-manager"
#     - "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-scheduler"
#     - "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl"

- name: create kube-apiserver.service from template
  template:
    src: templates/kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
  when: inventory_hostname in groups['controller']

- name: start service kube-apiserver
  ansible.builtin.service:
    name: kube-apiserver
    state: restarted
    enabled: yes
  when: inventory_hostname in groups['controller']

- name: copy kube-controller-manager.service
  copy:
    src: files/kube-controller-manager.service
    dest: /etc/systemd/system/kube-controller-manager.service
  when: inventory_hostname in groups['controller']

- name: Generate kube config on controllers
  ansible.builtin.command:
    cmd: "{{ item }}"
  with_items:
    - kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=/var/lib/kubernetes/ca.pem --embed-certs=true --server=https://127.0.0.1:6443 --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
    - kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:kube-controller-manager --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
    - kubectl config use-context default --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
  when: inventory_hostname in groups['controller']

- name: start service kube-controller-manager
  ansible.builtin.service:
    name: kube-controller-manager
    state: restarted
    enabled: yes
  when: inventory_hostname in groups['controller']